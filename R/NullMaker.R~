NullMaker=function (comm, sims = 1000, method = "r1", ordinate=TRUE, scores=1, allow.empty = FALSE){	
require(devtools)
install_github('vegan', 'vegandevs')
require(vegan)

null <- nullmodel(comm, method)
nizzles <- simulate(null, nsim=sims)

getMats=function(nizzles=nizzles, comm=comm){
	mats=list()
	breaks=seq(0, length(as.vector(nizzles)), by=length(comm))
	for(i in 1:(length(breaks)-1)){
		dat=as.vector(nizzles)[(breaks[i]+1):breaks[i+1]]
		mats[[i]]=matrix(dat, ncol=ncol(comm), nrow=nrow(comm))
		}
	return(mats)
}

replaceEmpty=function(getMatobject, null=null, sims=sims){	
	remove=vector()
		for(i in 1:length(getMatobject)){
		if(any(colSums(getMatobject[[i]])==0) | any(rowSums(getMatobject[[i]]) == 0)){remove[i]=1}else{remove[i]=0}}

	if(sum(remove)==0){return(getMatobject)
	}else{getMatobject=getMatobject[which(remove==0)]}

	ret=getMatobject
	while(length(ret) < sims){
		spares = simulate(null, nsim = sims/10)
		sparemats=getMats(nizzles = spares, comm = comm)	
		rspare=vector()	
		for(i in 1:length(sparemats)){
			if(any(colSums(sparemats[[i]])==0) | any(rowSums(sparemats[[i]]) == 0)){rspare[i]=1}else{rspare[i]=0}}
		if(sum(rspare)>0){sparemats=sparemats[which(rspare == 0)]}
		ret=c(ret, sparemats)
	}
return(ret[1:sims])
}

mats=getMats(nizzles, comm=comm)

  if(allow.empty == FALSE){
		rmats=replaceEmpty(mats, null, sims)}
	if(allow.empty == TRUE){rmats = mats}

	if(ordinate==TRUE){rmats=lapply(rmats, OrderMatrix, scores=scores)}

return(rmats)
}


